[tool.poetry]
name = "sales-assistant"
version = "0.1.0"
description = "Domain-specific sales assistant with knowledge ingestion and recommendation engine"
authors = ["Sales Assistant Team <team@example.com>"]
readme = "README.md"
package-mode = true
packages = [
  { include = "src" }
]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.111.0"
uvicorn = { extras = ["standard"], version = "^0.30.0" }
SQLAlchemy = "^2.0.25"
pgvector = "^0.2.5"
psycopg = { extras = ["binary"], version = "^3.2.1" }
redis = "^5.0.4"
structlog = "^24.1.0"
pydantic = "^2.8.0"
pydantic-settings = "^2.2.1"
python-dotenv = "^1.0.1"
openai = "^1.37.0"
sentence-transformers = "^3.0.1"
httpx = { version = "^0.27.0", extras = ["http2"] }
celery = "^5.4.0"
passlib = "^1.7.4"
alembic = "^1.13.2"
pypdf = "^5.1.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.2"
pytest-asyncio = "^0.23.7"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"
freezegun = "^1.5.1"
respx = "^0.21.1"
black = "^24.8.0"
ruff = "^0.5.6"
isort = "^5.13.2"
mypy = "^1.10.0"
pre-commit = "^3.8.0"

[build-system]
requires = ["poetry-core>=1.9.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra --strict-markers --disable-warnings"
testpaths = [
  "tests"
]
asyncio_mode = "auto"

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.ruff]
line-length = 100
select = [
  "E",
  "F",
  "I",
  "UP",
  "B",
  "S",
  "W",
  "PL",
  "RUF"
]
ignore = ["S101"]
per-file-ignores = {"tests/" = ["S101", "D100", "D103"]}

[tool.mypy]
python_version = "3.11"
warn_unused_configs = true
warn_unused_ignores = true
strict_optional = true
namespace_packages = true
mypy_path = "src"
plugins = ["pydantic.mypy"]
